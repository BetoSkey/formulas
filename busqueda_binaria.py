from ubicacion_binaria import ubicacion_binaria
from ordenamiento_insercion import ordenamiento_insercion
import unittest


def busqueda_binaria(lista, comienzo, final, objetivo, ordenar=True):
    lista_ordenada = []
    if ordenar == True:
        lista_ordenada = ordenamiento_insercion(lista)

    if comienzo > final:
        return False
    medio = (comienzo + final) // 2
    if lista_ordenada[medio] == objetivo:
        return True
    elif lista_ordenada[medio] < objetivo:
        return busqueda_binaria(lista_ordenada, medio + 1, final, objetivo)
    else:
        return busqueda_binaria(lista_ordenada, comienzo, medio - 1, objetivo)


class prueba_caja_cristal(unittest.TestCase):
    def test_lista_pequeña_encontrado(self):
        lista = [0, 5, 1]
        objetivo = 1

        resultado = busqueda_binaria(lista, 0, len(lista)-1, objetivo)

        self.assertEqual(resultado, True)

    def test_lista_pequeña_no_encontrado(self):
        lista = [2, 9, 4]
        objetivo = 7

        resultado = busqueda_binaria(lista, 0, len(lista)-1, objetivo)

        self.assertEqual(resultado, False)

    def test_lista_mil_elementos_encontrado(self):
        lista = lista = [
            774, 962, 329, 223, 30, 55, 584, 888, 924, 854, 799, 591, 723, 581, 660, 502, 53, 808, 951, 432,
            705, 659, 872, 7, 304, 390, 960, 100, 596, 363, 590, 918, 861, 100, 567, 48, 365, 818, 44, 988,
            287, 953, 604, 262, 411, 921, 91, 925, 266, 675, 287, 528, 296, 666, 300, 333, 498, 905, 990, 316,
            582, 992, 473, 515, 294, 176, 779, 759, 365, 97, 423, 594, 801, 128, 265, 594, 306, 125, 936, 374,
            214, 676, 743, 941, 731, 363, 780, 795, 873, 254, 655, 712, 7, 910, 769, 209, 264, 557, 791, 512,
            275, 124, 849, 576, 816, 858, 366, 816, 336, 916, 843, 365, 651, 114, 237, 686, 585, 92, 660, 619,
            645, 501, 138, 365, 223, 344, 475, 908, 596, 494, 23, 972, 576, 377, 639, 490, 199, 24, 996, 131,
            999, 993, 390, 27, 669, 969, 862, 757, 966, 460, 449, 215, 786, 413, 77, 644, 811, 245, 292, 451,
            163, 869, 565, 335, 926, 281, 269, 95, 69, 75, 612, 416, 59, 198, 393, 626, 481, 655, 774, 152, 432,
            302, 260, 100, 959, 320, 299, 82, 888, 794, 415, 411, 805, 639, 605, 226, 856, 796, 823, 398, 361, 215,
            801, 619, 698, 807, 24, 639, 407, 837, 897, 885, 243, 938, 852, 33, 784, 903, 409, 132, 992, 945, 772,
            779, 645, 279, 739, 604, 441, 448, 823, 857, 219, 884, 676, 918, 748, 484, 779, 45, 257, 487, 424, 598,
            539, 906, 626, 489, 1000, 356, 683, 85, 105, 539, 331, 922, 979, 591, 161, 802, 731, 135, 394, 890, 441,
            273, 410, 66, 787, 607, 223, 154, 386, 495, 761, 869, 154, 853, 708, 744, 376, 803, 694, 352, 306, 854,
            445, 361, 873, 191, 810, 427, 51, 530, 438, 624, 501, 916, 758, 84, 903, 770, 940, 397, 174, 164, 384,
            609, 931, 671, 420, 905, 786, 439, 794, 965, 669, 505, 107, 599, 230, 128, 417, 415, 12, 744, 732, 823,
            671, 341, 393, 716, 749, 100, 960, 140, 123, 849, 425, 855, 132, 590, 679, 728, 776, 650, 610, 867, 676,
            9, 547, 717, 861, 927, 308, 26, 159, 118, 411, 89, 363, 527, 544, 253, 147, 862, 658, 10, 741, 51, 121,
            383, 74, 154, 44, 848, 221, 137, 347, 457, 532, 538, 876, 265, 581, 782, 845, 568, 911, 537, 218, 440, 88,
            380, 269, 134, 667, 470, 53, 933, 329, 576, 622, 377, 586, 295, 289, 77, 981, 833, 374, 812, 791, 510, 267,
            545, 595, 426, 528, 34, 669, 63, 849, 76, 476, 596, 305, 706, 61, 304, 579, 860, 157, 201, 708, 908, 934,
            702, 936, 853, 672, 662, 282, 904, 89, 943, 814, 671, 167, 88, 438, 514, 681, 657, 327, 725, 648, 679, 51,
            14, 579, 241, 496, 9, 281, 987, 475, 796, 491, 138, 941, 850, 302, 621, 692, 108, 758, 269, 903, 64, 426,
            206, 423, 523, 538, 986, 494, 53, 901, 758, 214, 841, 588, 246, 765, 982, 266, 206, 907, 350, 276, 317, 155,
            554, 980, 295, 251, 264, 724, 837, 693, 529, 184, 708, 1, 44, 409, 37, 535, 871, 746, 657, 885, 252, 249, 311,
            983, 929, 815, 940, 47, 723, 968, 872, 429, 546, 86, 625, 194, 133, 344, 938, 605, 810, 451, 236, 162, 789,
            598, 368, 984, 612, 949, 63, 30, 191, 997, 943, 882, 240, 659, 572, 644, 954, 685, 682, 896, 694, 32, 267,
            341, 273, 557, 292, 180, 968, 740, 281, 174, 75, 640, 525, 629, 806, 580, 640, 596, 632, 643, 192, 694, 547,
            73, 529, 187, 618, 747, 311, 891, 901, 303, 492, 701, 885, 10, 745, 224, 52, 647, 454, 819, 3, 103, 447, 482,
            490, 271, 56, 159, 717, 968, 340, 266, 791, 335, 837, 25, 790, 677, 372, 91, 483, 435, 890, 951, 614, 645, 473,
            31, 625, 450, 786, 934, 952, 395, 256, 412, 543, 903, 932, 174, 314, 263, 20, 155, 655, 592, 629, 932, 770, 87,
            624, 589, 905, 778, 339, 366, 737, 134, 240, 511, 386, 884, 576, 446, 164, 116, 710, 958, 146, 600, 314, 692,
            685, 956, 256, 793, 455, 177, 70, 41, 859, 84, 750, 491, 509, 49, 829, 696, 531, 922, 798, 478, 544, 72, 811,
            422, 132, 0, 138, 831, 672, 337, 677, 223, 961, 557, 483, 565, 290, 321, 655, 560, 803, 582, 542, 599, 924,
            884, 278, 650, 4, 325, 155, 107, 802, 66, 732, 779, 275, 354, 616, 563, 869, 322, 700, 236, 632, 730, 302, 907,
            233, 713, 957, 737, 32, 285, 847, 322, 35, 487, 937, 979, 692, 531, 997, 442, 139, 938, 280, 688, 819, 564, 20,
            928, 129, 149, 619, 290, 303, 300, 578, 594, 595, 151, 876, 164, 64, 418, 743, 564, 414, 909, 866, 675, 386, 964,
            733, 741, 950, 962, 439, 228, 395, 87, 626, 912, 708, 293, 45, 900, 367, 736, 191, 146, 584, 61, 398, 358, 700,
            4, 24, 126, 658, 384, 131, 76, 737, 924, 653, 490, 169, 891, 587, 481, 474, 374, 821, 824, 40, 864, 615, 590,
            435, 10, 85, 695, 698, 738, 204, 811, 393, 236, 440, 98, 24, 444, 741, 274, 285, 529, 711, 860, 342, 8, 741,
            483, 955, 521, 557, 601, 165, 326, 270, 312, 959, 253, 205, 422, 145, 28, 590, 628, 272, 538, 901, 716, 451,
            658, 331, 532, 994, 554, 737, 936, 579, 68, 371, 790, 898, 727, 255, 524, 563, 26, 777, 368, 227, 293, 636,
            300, 742, 156, 404, 37, 547, 685, 358, 57, 801, 660, 656, 785, 9, 667, 478, 614, 629, 807, 915, 248, 778, 591,
            347, 819, 27, 640, 535, 82, 75, 863, 221, 527, 578, 301, 487, 117, 9, 602, 599, 280, 40, 160, 940, 938, 709,
            782, 812, 168, 415, 886, 242, 627, 399, 788, 282, 458, 615, 956, 402, 110, 306, 343, 345, 721, 10, 58, 3, 989,
            196, 558, 655, 993, 9, 512, 151, 577, 807, 539, 772, 443, 882, 138, 88, 537, 134, 571, 859, 257, 691
        ]
        objetivo = 415

        resultado = busqueda_binaria(lista, 0, len(lista)-1, objetivo)

        self.assertEqual(resultado, True)

    def test_lista_cien_elementos_no_encontrado(self):
        lista = [
            48, 64, 54, 74, 58, 75, 54, 9, 37, 86, 95, 84, 73, 12, 42, 45, 29, 21, 78, 85, 60, 60, 10, 95, 94,
            35, 53, 75, 87, 77, 38, 31, 82, 39, 42, 69, 77, 88, 37, 32, 48, 50, 0, 42, 20, 67, 39, 2, 45, 48,
            70, 9, 23, 29, 84, 60, 36, 33, 88, 19, 3, 12, 89, 17, 56, 65, 12, 37, 19, 19, 89, 11, 32, 56, 43,
            38, 66, 1, 100, 42, 23, 38, 86, 23, 43, 65, 46, 27, 77, 21, 100, 77, 39, 100, 51, 22, 7, 62, 82, 41
        ]
        objetivo = 101

        resultado = busqueda_binaria(lista, 0, len(lista)-1, objetivo)

        self.assertEqual(resultado, False)


if __name__ == '__main__':
    unittest.main()
